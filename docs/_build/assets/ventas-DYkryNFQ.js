import{m as f,c as t,G as c,N as u,b as i,J as n}from"./app-De9iPHfG.js";const l=[{id:1,name:"Caja"},{id:2,name:"Cuenta Bancaria"}],m=[{id:1,name:"-",group:1},{id:2,name:"Cuadre Físico",group:1},{id:3,name:"Transferencia",group:2,isNegative:!0},{id:4,name:"Retiro",group:2,isNegative:!0},{id:5,name:"Pérdida",group:2,isNegative:!0},{id:6,name:"Pago",group:2,isNegative:!0},{id:7,name:"Cobro",group:2}],h=()=>f({route:"cajas",emptyValue:[],errorMessage:"Hubo un error al obtener los productos.",cacheSyncTime:1,mergeRequest:!0,useIndexDBCache:"cajas"},e=>{console.log("result cajas::",e);const a=e;a.Cajas=a.Cajas||[];for(let o of a.Cajas)o.SaldoCurrent=o.SaldoCurrent||0;return a.CajasMap=t(a.Cajas,"ID"),a}),j=e=>i({data:e,route:"cajas",refreshIndexDBCache:"cajas"}),C=async e=>{let a=`caja-movimientos?caja-id=${e.CajaID}`;if((!e.fechaInicio||!e.fechaFin)&&!e.lastRegistros)throw"No se encontró una fecha de inicio o fin.";a+=`&fecha-hora-inicio=${n(e.fechaInicio)}`,a+=`&fecha-hora-fin=${n(e.fechaFin+1)}`,e.lastRegistros&&(a+=`&last-registros=${e.lastRegistros}`);let o;try{o=await c({route:a,emptyValue:[],errorMessage:"Hubo un error al obtener los movimientos de la caja."})}catch(r){u.failure(r)}const s=t(o.usuarios,"id");for(let r of o.movimientos)r.Usuario=s.get(r.CreatedBy);return o.movimientos},p=e=>i({data:e,route:"caja-movimiento",refreshIndexDBCache:"cajas"}),g=e=>i({data:e,route:"caja-cuadre",refreshIndexDBCache:"cajas"}),v=async e=>{let a=`caja-cuadres?caja-id=${e.CajaID}`;if((!e.fechaInicio||!e.fechaFin)&&!e.lastRegistros)throw"No se encontró una fecha de inicio o fin.";a+=`&fecha-hora-inicio=${e.fechaInicio*24*60*60+window._zoneOffset}`,a+=`&fecha-hora-fin=${(e.fechaFin+1)*24*60*60+window._zoneOffset}`,e.lastRegistros&&(a+=`&last-registros=${e.lastRegistros}`);let o;try{o=await c({route:a,emptyValue:[],errorMessage:"Hubo un error al obtener los movimientos de la caja."})}catch(r){u.failure(r)}const s=t(o.usuarios,"id");for(let r of o.cuadres)r.Usuario=s.get(r.CreatedBy);return o.cuadres};export{v as a,l as b,m as c,g as d,p as e,C as g,j as p,h as u};
